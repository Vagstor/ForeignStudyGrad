//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : monitoring
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 10.3
	/// </summary>
	public partial class MainDb : LinqToDB.Data.DataConnection
	{
		public ITable<Site>  Sites  { get { return this.GetTable<Site>(); } }
		public ITable<User>  Users  { get { return this.GetTable<User>(); } }
		public ITable<Visit> Visits { get { return this.GetTable<Visit>(); } }

		partial void InitMappingSchema()
		{
		}

		public MainDb()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public MainDb(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="monitoring", Name="sites")]
	public partial class Site
	{
		[Column("id"),          PrimaryKey,  NotNull] public Guid     Id         { get; set; } // uuid
		[Column("url"),            Nullable         ] public string   Url        { get; set; } // character varying
		[Column("user_id"),        Nullable         ] public Guid?    UserId     { get; set; } // uuid
		[Column("add_time"),                 NotNull] public DateTime AddTime    { get; set; } // timestamp (6) without time zone
		[Column("last_status"),    Nullable         ] public int?     LastStatus { get; set; } // integer

		#region Associations

		/// <summary>
		/// siteId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="SiteId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Visit> SiteIds { get; set; }

		/// <summary>
		/// userId
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="userId", BackReferenceName="UserIds")]
		public User User { get; set; }

		#endregion
	}

	[Table(Schema="monitoring", Name="users")]
	public partial class User
	{
		[Column("id"),       PrimaryKey, NotNull] public Guid   Id       { get; set; } // uuid
		[Column("login"),                NotNull] public string Login    { get; set; } // character varying
		[Column("password"),             NotNull] public string Password { get; set; } // character varying
		[Column("email"),                NotNull] public string Email    { get; set; } // character varying

		#region Associations

		/// <summary>
		/// userId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UserId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Site> UserIds { get; set; }

		#endregion
	}

	[Table(Schema="monitoring", Name="visits")]
	public partial class Visit
	{
		[Column("id"),         PrimaryKey,  NotNull] public Guid     Id        { get; set; } // uuid
		[Column("url"),           Nullable         ] public string   Url       { get; set; } // character varying
		[Column("visit_time"),              NotNull] public DateTime VisitTime { get; set; } // timestamp (6) without time zone
		[Column("siteId"),                  NotNull] public Guid     SiteId    { get; set; } // uuid
		[Column("status"),                  NotNull] public int      Status    { get; set; } // integer
		[Column("error_desc"),    Nullable         ] public string   ErrorDesc { get; set; } // character varying

		#region Associations

		/// <summary>
		/// siteId
		/// </summary>
		[Association(ThisKey="SiteId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="siteId", BackReferenceName="SiteIds")]
		public Site Site { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Site Find(this ITable<Site> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Visit Find(this ITable<Visit> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
